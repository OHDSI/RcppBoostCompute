languague: cpp
sudo: false

env:
  global:
    - OPENCL_ROOT=~/opencl
    - TRY_OS="linux"

env:
  global:
    secure: S3VMaROvyrkRV/t2Lmdtt6/B3R7IHynfYX0kRSDL5mW/zkxUpV3Wm8TMOcsUpz7vBX53UK+ze882L/nIzBhVc5NEl2unswqDd8LYMZmAqKeeKB3RiSkdCZPOAJVVvru3M3hy/RIVxQgyCRLK8QSwhax0nVqRu51JL4WUMrDkqxo=

addons:
  apt:
    sources:
    - r-packages-precise
    packages:
    - r-base-dev
    - r-recommended
    - texinfo
    - qpdf
    
cache:
  directories:
    - ~/opencl
    - ~/Rlib     # R libraries
    - ~/texlive  # LaTex 
    - ~/bin      # pandoc 

before_install:
  - |
    if [[ "linux" == "linux" ]]; then
        mkdir -p ~/opencl
        pushd ~/opencl
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-ICD-Loader.git
        mv ./OpenCL-ICD-Loader/* .
        mkdir -p include/CL
        pushd include/CL
        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git
        mv ./OpenCL-Headers/* .
        popd
        mkdir -p lib
        pushd lib
        cmake -G "Unix Makefiles" ..
        make
        cp ./bin/libOpenCL.so .
        popd
        popd
    fi    
  - ls ~/opencl
  - ls ~/opencl/include
  - ls ~/opencl/include/CL
  - ls ~/opencl/lib
  
# install dependencies
install:
  # Save R packages in Rlib
  - mkdir -p ~/Rlib
  - echo 'R_LIBS=~/Rlib' > .Renviron
  - echo 'options(repos = "http://cran.rstudio.com")' > .Rprofile
  - mkdir -p ~/.R
  - grep '\-g'  /etc/R/Makeconf | sed 's/-g//g' > ~/.R/Makevars # Turn off debug symbols
  # Build LaTex and pandoc
  - mkdir -p ~/bin
  - wget -q -O - https://github.com/yihui/crandalf/raw/master/inst/scripts/install-texlive | bash
  - wget -q -O - https://github.com/yihui/crandalf/raw/master/inst/scripts/install-pandoc | bash
  - PATH=$HOME/texlive/bin/x86_64-linux:$PATH  
  # Install R packages
  - Rscript -e "if (!require('devtools')) install.packages('devtools')"   
  - Rscript -e "if (!require('BH')) install.packages('BH')" 
  - Rscript -e "if (!require('drat')) install.packages('drat')"
  - Rscript -e "if (!require('BoostCompiledLibraries')) devtools::install_github('OHDSI/BoostCompiledLibraries')"
  - Rscript -e "if (!require('Rcpp')) install.packages('Rcpp')"
  - Rscript -e "if (!require('testthat')) install.packages('testthat')"  
  # Install OpenCL  
#  - if [[ "true" == "true" ]]; then
#      wget https://jenkins.choderalab.org/userContent/AMD-APP-SDKInstaller-v3.0.130.135-GA-linux64.tar.bz2;
#      tar -xjf AMD-APP-SDK*.tar.bz2;
#      AMDAPPSDK=${HOME}/AMDAPPSDK;
#      export OPENCL_VENDOR_PATH=${AMDAPPSDK}/etc/OpenCL/vendors;
#      mkdir -p ${OPENCL_VENDOR_PATH};
#      sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDK};
#      echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd;
#      export LD_LIBRARY_PATH=${AMDAPPSDK}/lib/x86_64:${LD_LIBRARY_PATH};
#      chmod +x ${AMDAPPSDK}/bin/x86_64/clinfo;
#      ${AMDAPPSDK}/bin/x86_64/clinfo;
#    fi    
#    - |
#      if [[ "${TRY_OS}" == "linux" ]]; then
#      fi
#        mkdir -p ${OPENCL_ROOT}
#        pushd ${OPENCL_ROOT}
#        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-ICD-Loader.git
#        mv ./OpenCL-ICD-Loader/* .
#        mkdir -p inc/CL
#        pushd inc/CL
#        travis_retry git clone --depth 1 https://github.com/KhronosGroup/OpenCL-Headers.git
#        mv ./OpenCL-Headers/* .
#        popd
#        mkdir -p lib
#        pushd lib
#        cmake -G "Unix Makefiles" ..
#        make
#        cp ./bin/libOpenCL.so .
#        popd
#        popd
#      fi
    
before_script:
  - export PKG_NAME=$(Rscript -e 'cat(paste0(devtools::as.package(".")$package))')
  - export PKG_TARBALL=$(Rscript -e 'pkg <- devtools::as.package("."); cat(paste0(pkg$package,"_",pkg$version,".tar.gz"))')
  
 # Build and check package
script:
  - R CMD build .
  - _R_CHECK_CRAN_INCOMING_=FALSE R CMD check "${PKG_TARBALL}" --as-cran
  - cat ${PKG_NAME}.Rcheck/00install.out # Print out install / compile log

after_success:
#  - Rscript -e 'covr::codecov()'
  # Rebuild docker container
#  - curl --data "build=true" -X POST https://registry.hub.docker.com/u/ohdsi/development/trigger/e51f720d-c4e7-45df-b042-5d8a362bd7e0/
  # Rebuild drat repo   
  - test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_BRANCH == "master" && bash deploy.sh

notifications:
  recipients:
    - msuchard@gmail.com
  email:
    on_success: change
    on_failure: always
